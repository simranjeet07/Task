# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-04-01 12:07
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.manager
import learnforms.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('A', 'Author'), ('E', 'Editor')], max_length=1)),
            ],
            managers=[
                ('people', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(\\w+\\d+|\\d+\\w+)+$', message='Password should be a combination of Alphabets and Numbers')])),
                ('email', models.CharField(max_length=100, validators=[django.core.validators.EmailValidator('please enter a valid email')])),
                ('val', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10, 'enter value below 10'), django.core.validators.MinValueValidator(0, 'enter value above 0')])),
                ('even_field', models.IntegerField(validators=[learnforms.validators.validate_even])),
            ],
        ),
    ]
